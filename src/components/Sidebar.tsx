import { FC, ReactElement, useEffect, useMemo, useState } from "react";
import { TbArrowsRight, TbArrowsRightLeft, TbCirclePlus, TbCircleMinus } from "react-icons/tb"
import { AiOutlineLineChart } from "react-icons/ai"
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import Image from "next/image";
import logo from "./../../public/aqueduct-logo.png";
import { useStore } from "../store";
import { ConnectButton } from '@rainbow-me/rainbowkit';
import CustomWalletConnectButton from "./CustomWalletConnectButton";

interface SideBarTabProps {
    icon: any;
    label: string;
    page: string;
}

const SideBarTab: FC<SideBarTabProps> = ({
    icon,
    label,
    page
}): ReactElement => {
    const router = useRouter();

    return (
        <button 
            className={`flex w-full items-center space-x-3 pl-2 pr-6 py-2 rounded-xl transition-all ease-in-out duration-300
                        ${router.asPath === page ? "bg-aqueductBlue/5 hover:bg-aqueductBlue/10" : "hover:bg-gray-100"} `}
            onClick={() => {
                router.push(page)
            }}
        >
            <div className={`bg-gray-100 p-2 rounded-lg ${router.asPath === page ? "bg-aqueductBlue/10 text-aqueductBlue" : "text-gray-400"}`}>
                {icon}
            </div>
            <p className={`text-sm font-medium ${router.asPath === page ? "bg-transparent text-aqueductBlue" : "text-gray-600"}`}>
                {label}
            </p>
        </button>
    )
}

const navItems: { icon: any, label: string; page: string }[] = [
    { icon: <AiOutlineLineChart size={18} />, label: "My Streams", page: "/my-streams" },
    { icon: <TbArrowsRightLeft size={18} />, label: "Swap", page: "/" },
    { icon: <TbArrowsRight size={18} />, label: "Provide Liquidity", page: "/provide-liquidity" },
    { icon: <TbCirclePlus size={18} />, label: "Wrap / Unwrap", page: "/wrap" },
];

const Sidebar = () => {
    const router = useRouter();
    const store = useStore();
    const account = store.account;

    return (
        <header className="flex flex-col p-4 w-64 h-screen space-y-8 border-2 flex-shrink-0">
            <Head>
                <title>Aqueduct</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="flex items-center space-x-2 text-aqueductBlue">
                <Image
                    src={logo}
                    alt="Aqueduct logo"
                    layout="fixed"
                    width="45px"
                    height="45px"
                    className="rounded-xl"
                />
                <h1 className="text-2xl font-semibold pr-3 poppins-font">aqueduct</h1>
            </div>
            <CustomWalletConnectButton />
            <ul className="space-y-3">
                {navItems.map(({ icon, label, page }) => (
                    <SideBarTab icon={icon} label={label} page={page} />
                ))}
            </ul>
        </header>
    )
}

export default Sidebar;